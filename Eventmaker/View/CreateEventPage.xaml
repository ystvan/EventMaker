<Page
    x:Class="Eventmaker.View.CreateEventPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Eventmaker.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="using:Eventmaker.ViewModel"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <!--This AppBar is like the Navigation Pane in Win10, but this one comes from win 8.1 developement-->

    <Page.BottomAppBar>
        <CommandBar>
            <!--Button for easier navigation by using app on phone-->
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Name="AppBarButton" Label="Go to Events">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:NavigateToPageAction TargetPage="Eventmaker.View.EventPage"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
            
            <CommandBar.Content>
                <Grid/>
            </CommandBar.Content>
            <!--create new event button by binding "create" command-->
            <AppBarButton Icon="Add" Label="Save" Command="{Binding CreateEventCommand}"/>
            <!-- "refresh" button, clear all fields and start over adding data-->
            <AppBarButton Icon="RepeatAll" Label="Clear all fields">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:NavigateToPageAction TargetPage="Eventmaker.View.CreateEventPage"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <!-- Back button, using navigation-->
            <AppBarButton HorizontalAlignment="Stretch" Icon="Back" Label="Back">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:NavigateToPageAction TargetPage="Eventmaker.View.EventPage"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            
        </CommandBar>
    </Page.BottomAppBar>

    <!--Remember to define the DatatContext-->

    <Page.DataContext>
        <viewModel:EventViewModel/>
    </Page.DataContext>

    <!--By using static style resources we can ensure a steady design flow and save up 
        quite a lot typing when modification is required-->

    <Page.Resources>
        <Style TargetType="TextBlock" x:Key="CreateEventTextBlockStyle">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,2,5"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="IsColorFontEnabled" Value="True"/>
            <!--<Setter Property="" Value=""/>-->
        </Style>
        <Style TargetType="TextBox" x:Name="CreateEventTextBoxStyle">
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,0,5,5"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="11"/>
            <!--<Setter Property="BorderBrush" Value="{Binding TextBoxBorderBrushColor}"/>-->
            <Setter Property="MinWidth" Value="295"/>
        </Style>
        <Style TargetType="Button" x:Key="CreateEventButtonStyle">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="BorderBrush" Value="#FF28B7D6"/>
        </Style>
        <Style TargetType="StackPanel" x:Key="VerticalStackPanel">
            <Setter Property="Orientation" Value="Vertical"/>
        </Style>
        <Style TargetType="StackPanel" x:Key="HorizontalStackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
    </Page.Resources>


    <!-- By having an adaptive design, our app is able to be used on different devices with various screen sizes -->

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="VisualStateGroup">

            <VisualState x:Name="MinimumLayout">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="0"/>
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter Target="HeaderTextBlock.TextSize" Value="20"></Setter>
                </VisualState.Setters>
            </VisualState>

        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

    <!--defining the page layout, either working with grids or stackpanels, both will give us a neat overall outline-->

    <Grid Margin="5,5,5,5" Background="#FF5B5B5B">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--putting the textboxes and textblock next to 
        each other (vertical-horizontal in logical way), 
        specifying which grid they are placed-->

        <TextBlock  x:Name="HeaderTextBlock"
                                    Text="Add new Event" Grid.ColumnSpan="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Margin="19,14,56,23" FontFamily="Segoe UI" FontWeight="Light"
                                    FontSize="32" Grid.Column="1" Height="43" Width="225"/>

        <TextBlock  Grid.Row="1"    
                                    Style="{StaticResource CreateEventTextBlockStyle}" 
                                    Text="Id" Height="16" Margin="0,8,2,13" Width="11"/>
        <TextBox    Grid.Row="1"    x:Name="IdTextBox" BorderBrush="{Binding IdTextBoxBorderBrushColor, Mode=TwoWay}"
                                    Grid.Column="1" PlaceholderText="Give a number according to its pripority"
                                    Style="{StaticResource CreateEventTextBoxStyle}" 
                                    Text="{Binding Id, Mode=TwoWay}" Height="32" Margin="0,0,0,5" Width="295"/>

        <TextBlock  Grid.Row="2"    
                                    Style="{StaticResource CreateEventTextBlockStyle}" 
                                    Text="Name" Height="16" Margin="0,8,2,13" Width="33"/>
        <TextBox    Grid.Row="2"    x:Name="NameTextBox" BorderBrush="{Binding NameTextBoxBorderBrushColor, Mode=TwoWay}"
                                    Grid.Column="1" PlaceholderText="What shall it remind you?"
                                    Style="{StaticResource CreateEventTextBoxStyle}" 
                                    Text="{Binding Name, Mode=TwoWay}" Height="32" Margin="0,0,0,5" Width="295"/>


        <TextBlock  Grid.Row="3" 
                                    Style="{StaticResource CreateEventTextBlockStyle}" 
                                    Text="Notes" Height="16" Margin="0,8,2,13" Width="33"/>
        <TextBox    Grid.Row="3"    x:Name="DescriptionTextBox" BorderBrush="{Binding DescriptionTextBoxBorderBrushColor, Mode=TwoWay}"
                                    Grid.Column="1" PlaceholderText="What is this event about?"
                                    Style="{StaticResource CreateEventTextBoxStyle}" 
                                    Text="{Binding Description, Mode=TwoWay}" Height="32" Margin="0,0,0,5" Width="295"/>


        <TextBlock  Grid.Row="4" 
                                    Style="{StaticResource CreateEventTextBlockStyle}" 
                                    Text="Place" Height="16" Margin="0,8,2,13" Width="29"/>
        <TextBox    Grid.Row="4"    x:Name="PlaceTextBox" BorderBrush="{Binding PlaceTextBoxBorderBrushColor, Mode=TwoWay}"
                                    Grid.Column="1" PlaceholderText="Where is this Event taking place?"
                                    Style="{StaticResource CreateEventTextBoxStyle}" 
                                    Text="{Binding Place, Mode=TwoWay}" Height="32" Margin="0,0,0,5" Width="295"/>


        <TextBlock  Grid.Row="5"    
                                    Style="{StaticResource CreateEventTextBlockStyle}" 
                                    Text="Date" Height="16" Margin="0,8,2,13" Width="26"/>
        <DatePicker Grid.Row="5"    MaxWidth="300"
                                    Grid.Column="1"
                                    Margin="0,0,0,5"
                                    Date="{Binding Date}"
                                    BorderBrush="WhiteSmoke" Height="32" Width="296"/>


        <TextBlock  Grid.Row="6" 
                                    Style="{StaticResource CreateEventTextBlockStyle}" 
                                    Text="Time" Height="16" Margin="0,8,2,13" Width="28"/>
        <TimePicker Grid.Row="6"
                                    Grid.Column="1"
                                    Margin="0,0,0,5"
                                    ClockIdentifier="24HourClock"
                                    Time="{Binding Time}"
                                    BorderBrush="WhiteSmoke" Height="32" Width="242"/>



    </Grid>
</Page>
